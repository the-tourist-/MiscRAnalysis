{
    "contents" : "require(RODBC)\nrequire(stats)\n\nMIPlotEODDataPrices <- function(EntityId=-1, Symbol=\"\", SubTitle=NULL, MarkDate=NULL) {\n  MDC <- odbcConnect(\"MindlessInvestingPROD\", believeNRows=T)\n  if (EntityId == -1)\n    EntityId = sqlQuery(MDC, sprintf(\"select dbo.GetEI('%s')\", Symbol))[[1]]\n  if (is.na(EntityId)) {\n    print(sprintf(\"Symbol %s not found\", Symbol))\n    return()\n  }\n  \n  Entity <- sqlQuery(MDC, sprintf(\"select * from Entities where EntityId = %i\", EntityId))\n  PriceData <- sqlQuery(MDC, sprintf(\"select Date, AdjClose, [Close], LogChange from UnAdjEODDataPrices where EntityId = %i order by Date\", EntityId), EntityId, stringsAsFactors=F)\n  odbcClose(MDC)\n  \n  if (class(PriceData) == \"character\") {\n    print(PriceData)\n    return()\n  }\n  \n  if (length(PriceData$Date) == 0)\n    return()\n  \n  PriceData$Date <- as.Date(PriceData$Date)\n  PriceData$AdjClose <- as.numeric(PriceData$AdjClose)\n  PriceData$Close <- as.numeric(PriceData$Close)\n  PriceData$LogChange <- as.numeric(PriceData$LogChange)\n  \n  with (PriceData, {\n    # Basic Plot\n    Title <- paste(Entity$Symbol, Entity$Name, sep=\" - \")\n    if (!is.null(SubTitle))\n      Title <- paste(Title, SubTitle, sep=\"\\n\")\n    plot(Date, AdjClose, type=\"n\", log=\"y\", xaxt=\"n\", yaxt=\"n\", main=Title, xlab=NA, ylab=NA)\n    \n    # X Axis and Gridlines\n    PriceRange <- floor(log10(range(AdjClose)))\n    Pow <- seq(PriceRange[1], PriceRange[2]+1)\n    TicksAt <- as.vector(sapply(Pow, function(p) (1:10)*10^p))\n    for (Marker in c(1.5,2,3,4,5,7))\n      Pow <- c(Pow, seq(PriceRange[1], PriceRange[2]+1)+log(Marker, 10)-1)\n    Labels <- signif(10^Pow, 2)\n    axis(2, 10^Pow, las=2, labels=Labels)\n    axis(2, TicksAt, tcl=-0.25, lwd=0, lwd.ticks=1, labels=NA)\n    abline(h=TicksAt, col=\"lightgrey\")\n    abline(h=10^Pow, col=\"darkgrey\", lwd=(Pow==as.integer(Pow))+1)\n    lines(Date, Close, col=\"orange\", lwd=2)\n    lines(Date, AdjClose, col=\"blue\", lwd=2)\n    \n    # Y Axis and Gridlines\n    NoOfDays <- as.numeric(max(Date)-min(Date))\n    \n    if (NoOfDays > 3 * 365) {\n      DateTicksAt <- as.Date(paste(seq(as.numeric(format(min(Date), \"%Y\")), as.numeric(format(max(Date), \"%Y\"))+1), \"-01-01\", sep=\"\"))\n      axis.Date(1, x=Date, at=DateTicksAt, format=\"%y\")\n      #abline(which(Date[Date==DateTicksAt])), col=\"darkgrey\")\n    }\n    else\n      axis.Date(1, x=Date)\n    \n    # Colour large price moves red\n    SuspiciousLogChanges <- which(abs(LogChange)>sqrt(2)-1)\n    segments(Date[SuspiciousLogChanges-1], AdjClose[SuspiciousLogChanges-1], Date[SuspiciousLogChanges], AdjClose[SuspiciousLogChanges], col=\"red\", lwd=2)\n    \n    # Place line on graph according to the mark date\n    for (MD in MarkDate) {\n      MarkDateIndex = which(Date==MD)\n      segments(Date[MarkDateIndex-1], AdjClose[MarkDateIndex-1], Date[MarkDateIndex], AdjClose[MarkDateIndex], col=\"green\", lwd=2)\n    }\n      \n  })\n}\n\nMIPlotEODDataPrices(Symbol=\"AMPI3\")",
    "created" : 1403701954249.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4162342892",
    "id" : "CEF8D404",
    "lastKnownWriteTime" : 1404301595,
    "path" : "~/GitHub/MiscRAnalysis/EODDataPricesGraph.R",
    "project_path" : "EODDataPricesGraph.R",
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}